INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/3RDPARTY/TinyXML
  ${PROJECT_SOURCE_DIR}/3RDPARTY/TetGen
  ${PROJECT_SOURCE_DIR}/3RDPARTY/QHull/QHull/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/UTIL/UTIL/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/GLM/glm_0_9_5_4/
  ${PROJECT_SOURCE_DIR}/FOUNDATION/GL3/GL3/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/TINY/TINY/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/GEOMETRY/GEOMETRY/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/MESH_ARRAY/MESH_ARRAY/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/CONVEX/CONVEX/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/SPARSE/SPARSE/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/MASS/MASS/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/KDOP/KDOP/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/BROAD/BROAD/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/NARROW/NARROW/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/PROX/PROX/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/CONTENT/CONTENT/include 
  ${PROJECT_SOURCE_DIR}/SIMULATION/SIMULATORS/SIMULATORS/include 
  ${PROJECT_SOURCE_DIR}/SIMULATION/PROCEDURAL/PROCEDURAL/include 
  ${PROJECT_SOURCE_DIR}/APPLICATIONS/RIGID_BODY/RIGID_BODY_GUI_SHARED/include
  ${OPENGL_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIR}
  ${DEVIL_INCLUDE_DIR}
  ${Boost_INCLUDE_DIRS}
)

IF(HAS_DIKUCL)
  INCLUDE_DIRECTORIES(
      ${PROJECT_SOURCE_DIR}/FOUNDATION/DIKUCL/DIKUCL/include 
    )
ENDIF(HAS_DIKUCL)

FILE(GLOB 
  RIGID_BODY_GUI_SHARED_SOURCES
  src/*.cpp 
  )

FILE(GLOB
  RIGID_BODY_GUI_SHARED_HEADERS
  include/*.h 
  )

FILE(GLOB
  RIGID_BODY_GUI_SHARED_SHADERS
  shaders/*.glsl
  shaders/ssao/*.glsl
  shaders/show_texture/*.glsl
  )

ADD_LIBRARY(
  rigid_body_gui_shared 
  ${RIGID_BODY_GUI_SHARED_SOURCES} 
  ${RIGID_BODY_GUI_SHARED_HEADERS}
  ${RIGID_BODY_GUI_SHARED_SHADERS}
  )

TARGET_LINK_LIBRARIES(
  rigid_body_gui_shared
  simulators
  procedural
  content
  gl3
  tiny
  sparse
  convex
  geometry
  mesh_array
  kdop
  narrow
  broad
  prox
  mass
  util
  tetgen
  tinyxml
  qhull
  ${DEVIL_LIBRARIES}
  ${Boost_SYSTEM_LIBRARIES} 
  ${Boost_FILESYSTEM_LIBRARIES} 
  ${OPENGL_LIBRARIES}
  ${GLEW_LIBRARIES}
  )

SOURCE_GROUP(Shaders FILES ${RIGID_BODY_GUI_SHARED_SHADERS} )

IF(HAS_DIKUCL)
  TARGET_LINK_LIBRARIES(rigid_body_gui_shared dikucl)
ENDIF(HAS_DIKUCL)

SET_TARGET_PROPERTIES(rigid_body_gui_shared PROPERTIES DEBUG_POSTFIX "D" )
SET_TARGET_PROPERTIES(rigid_body_gui_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY                "${PROJECT_SOURCE_DIR}/lib")
SET_TARGET_PROPERTIES(rigid_body_gui_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG          "${PROJECT_SOURCE_DIR}/lib")
SET_TARGET_PROPERTIES(rigid_body_gui_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE        "${PROJECT_SOURCE_DIR}/lib")
SET_TARGET_PROPERTIES(rigid_body_gui_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     "${PROJECT_SOURCE_DIR}/lib")
SET_TARGET_PROPERTIES(rigid_body_gui_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO "${PROJECT_SOURCE_DIR}/lib")
